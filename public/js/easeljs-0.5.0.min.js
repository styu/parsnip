  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>EaselJS/lib/easeljs-0.5.0.min.js at master Â· CreateJS/EaselJS</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon-precomposed" sizes="57x57" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="apple-touch-icon-144.png" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="CTXge5xoEmR4Z8GPrJodGK2EJ7vXv2I3Mh2jetdtdkw=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-407693f9f73c33bc72d72bf9656fbf5ae05597d3.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-56ff2781ae95d3a31c723b6774df51dd407ef091.css" media="screen" rel="stylesheet" type="text/css" />
    


        <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-d61440caec5d2210a2242b084cdb2bc6597e00b7.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-10bb27aa711348c17932dd3a2997237f40846e40.js" type="text/javascript"></script>
      

        <link rel='permalink' href='/CreateJS/EaselJS/blob/c28f597d16528c97de1d2e222ffeb01d3803309c/lib/easeljs-0.5.0.min.js'>
    <meta property="og:title" content="EaselJS"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/CreateJS/EaselJS"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/2e19351a9c80281d002b10b09461d277?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="EaselJS - The Easel Javascript library provides a full, hierarchical display list, a core interaction model, and helper classes to make working with the HTML5 Canvas element much easier. Join the google group at http://groups.google.com/group/easeljs for discussion."/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="CreateJS/EaselJS"/>

    <meta name="description" content="EaselJS - The Easel Javascript library provides a full, hierarchical display list, a core interaction model, and helper classes to make working with the HTML5 Canvas element much easier. Join the google group at http://groups.google.com/group/easeljs for discussion." />

  <link href="https://github.com/CreateJS/EaselJS/commits/master.atom" rel="alternate" title="Recent Commits to EaselJS:master" type="application/atom+xml" />

  </head>


  <body class="logged_in page-blob macintosh vis-public env-production  ">
    <div id="wrapper">

      

      

      

      


        <div class="header header-logged-in true">
          <div class="container clearfix">

            <a class="header-logo-blacktocat" href="https://github.com/">
  <span class="mega-icon mega-icon-blacktocat"></span>
</a>

            <div class="divider-vertical"></div>

              <a href="/notifications" class="notification-indicator tooltipped downwards" title="You have no unread notifications">
    <span class="mail-status all-read"></span>
  </a>
  <div class="divider-vertical"></div>


              <div class="topsearch command-bar-activated ">
  <form accept-charset="UTF-8" action="/search" class="command_bar_form" id="top_search_form" method="get">
  <a href="/search/advanced" class="advanced-search-icon tooltipped downwards command-bar-search" id="advanced_search" title="Advanced search"><span class="mini-icon mini-icon-advanced-search "></span></a>

  <input type="text" name="q" id="command-bar" placeholder="Search or type a command" tabindex="1" data-username="styu" autocapitalize="off">

  <span class="mini-icon help tooltipped downwards" title="Show command bar help">
    <span class="mini-icon mini-icon-help"></span>
  </span>

  <input type="hidden" name="ref" value="commandbar">

  <div class="divider-vertical"></div>
</form>
  <ul class="top-nav">
      <li class="explore"><a href="https://github.com/explore">Explore</a></li>
      <li><a href="https://gist.github.com">Gist</a></li>
      <li><a href="/blog">Blog</a></li>
    <li><a href="http://help.github.com">Help</a></li>
  </ul>
</div>


            

  
    <ul id="user-links">
      <li>
        <a href="https://github.com/styu" class="name">
          <img height="20" src="https://secure.gravatar.com/avatar/a1dfb86abc6444d13062d90cfac68602?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /> styu
        </a>
      </li>
      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo">
          <span class="mini-icon mini-icon-create"></span>
        </a>
      </li>
      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          title="Account settings ">
          <span class="mini-icon mini-icon-account-settings"></span>
        </a>
      </li>
      <li>
          <a href="/logout" data-method="post" id="logout" class="tooltipped downwards" title="Sign out">
            <span class="mini-icon mini-icon-logout"></span>
          </a>
      </li>
    </ul>



            
          </div>
        </div>


      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu">
          <div class="container">
            <div class="title-actions-bar">
              


<ul class="pagehead-actions">


    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="CTXge5xoEmR4Z8GPrJodGK2EJ7vXv2I3Mh2jetdtdkw=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="1280658" />

    <div class="select-menu js-menu-container js-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">
          <span class="mini-icon mini-icon-watching"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder js-menu-content">
        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container js-select-menu-pane">

            <div class="select-menu-item js-navigation-item js-navigation-target selected">
              <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for discussions in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-watching"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item js-navigation-target ">
              <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item js-navigation-target ">
              <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

    <li class="js-toggler-container js-social-container starring-container ">
      <a href="/CreateJS/EaselJS/unstar" class="minibutton js-toggler-target star-button starred upwards" title="Unstar this repo" data-remote="true" data-method="post" rel="nofollow">
        <span class="mini-icon mini-icon-remove-star"></span>
        <span class="text">Unstar</span>
      </a>
      <a href="/CreateJS/EaselJS/star" class="minibutton js-toggler-target star-button unstarred upwards" title="Star this repo" data-remote="true" data-method="post" rel="nofollow">
        <span class="mini-icon mini-icon-star"></span>
        <span class="text">Star</span>
      </a>
      <a class="social-count js-social-count" href="/CreateJS/EaselJS/stargazers">2,125</a>
    </li>

        <li>
          <a href="/CreateJS/EaselJS/fork_select" class="minibutton js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="facebox nofollow">
            <span class="mini-icon mini-icon-branch-create"></span>
            <span class="text">Fork</span>
          </a>
          <a href="/CreateJS/EaselJS/network" class="social-count">416</a>
        </li>


</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-public-repo"></span>
                <span class="author vcard">
                  <a href="/CreateJS" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">CreateJS</span>
                  </a></span> /
                <strong><a href="/CreateJS/EaselJS" class="js-current-repository">EaselJS</a></strong>
              </h1>
            </div>

            

  <ul class="tabs">
    <li><a href="/CreateJS/EaselJS" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/CreateJS/EaselJS/network" highlight="repo_network">Network</a></li>
    <li><a href="/CreateJS/EaselJS/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>12</span></a></li>

      <li><a href="/CreateJS/EaselJS/issues" highlight="repo_issues">Issues <span class='counter'>44</span></a></li>

      <li><a href="/CreateJS/EaselJS/wiki" highlight="repo_wiki">Wiki</a></li>


    <li><a href="/CreateJS/EaselJS/graphs" highlight="repo_graphsrepo_contributors">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/CreateJS/EaselJS/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter ">7</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="mini-icon mini-icon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container js-select-menu-pane">

        <div class="select-menu-modal js-select-menu-pane">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-select-menu-text-filter js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div> <!-- /.select-menu-text-filter -->
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-filter="branches" class="js-select-menu-tab selected">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list js-filter-tab js-filter-branches css-truncate" data-filterable-for="commitish-filter-field" data-filterable-type="substring">



              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                <a href="/CreateJS/EaselJS/blob/cache_test/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="cache_test" rel="nofollow" title="cache_test">cache_test</a>
              </div> <!-- /.select-menu-item -->

              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                <a href="/CreateJS/EaselJS/blob/jake_experiment/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="jake_experiment" rel="nofollow" title="jake_experiment">jake_experiment</a>
              </div> <!-- /.select-menu-item -->

              <div class="select-menu-item js-navigation-item js-navigation-target selected">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                <a href="/CreateJS/EaselJS/blob/master/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
              </div> <!-- /.select-menu-item -->

              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                <a href="/CreateJS/EaselJS/blob/touch/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="touch" rel="nofollow" title="touch">touch</a>
              </div> <!-- /.select-menu-item -->

              <div class="select-menu-no-results js-not-filterable">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list js-filter-tab js-filter-tags css-truncate" data-filterable-for="commitish-filter-field" data-filterable-type="substring" style="display:none;">

              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/CreateJS/EaselJS/blob/release_v0.5.0/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="release_v0.5.0" rel="nofollow" title="release_v0.5.0">release_v0.5.0</a>

              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/CreateJS/EaselJS/blob/release_v0.4.2/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="release_v0.4.2" rel="nofollow" title="release_v0.4.2">release_v0.4.2</a>

              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/CreateJS/EaselJS/blob/release_v0.4.1/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="release_v0.4.1" rel="nofollow" title="release_v0.4.1">release_v0.4.1</a>

              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/CreateJS/EaselJS/blob/release_v0.4.0/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="release_v0.4.0" rel="nofollow" title="release_v0.4.0">release_v0.4.0</a>

              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/CreateJS/EaselJS/blob/release_v0.3.2/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="release_v0.3.2" rel="nofollow" title="release_v0.3.2">release_v0.3.2</a>

              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/CreateJS/EaselJS/blob/release_v0.3.1/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="release_v0.3.1" rel="nofollow" title="release_v0.3.1">release_v0.3.1</a>

              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/CreateJS/EaselJS/blob/release_v0.3.0/lib/easeljs-0.5.0.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="release_v0.3.0" rel="nofollow" title="release_v0.3.0">release_v0.3.0</a>

              </div> <!-- /.select-menu-item -->

            <div class="select-menu-no-results js-not-filterable">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/CreateJS/EaselJS" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/CreateJS/EaselJS/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/CreateJS/EaselJS/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">4</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:c5e7bcd2c76209f4a0cc9801aae269e2 -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:c5e7bcd2c76209f4a0cc9801aae269e2 -->


<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/CreateJS/EaselJS" class="js-slide-to" data-direction="back" itemscope="url"><span itemprop="title">EaselJS</span></a></span></span> / <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/CreateJS/EaselJS/tree/master/lib" class="js-slide-to" data-direction="back" itemscope="url"><span itemprop="title">lib</span></a></span> / <strong class="final-path">easeljs-0.5.0.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="lib/easeljs-0.5.0.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="mini-icon mini-icon-clipboard"></span></span>
        </div>

      <a href="/CreateJS/EaselJS/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/470e17602fccdf7222d97fc5e0106b17?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><span rel="author">Grant Skinner</span></span>
    <time class="js-relative-date" datetime="2012-08-24T14:07:09-07:00" title="2012-08-24 14:07:09">August 24, 2012</time>
    <div class="commit-title">
        <a href="/CreateJS/EaselJS/commit/0af02d80a4199f9ebea3ec8d5a3158bfae9b5fee" class="message">Final updates before v0.5.0 release. Addition of MouseInteraction tutâ¦</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>0</strong> contributors</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/CreateJS/EaselJS/blob/c28f597d16528c97de1d2e222ffeb01d3803309c/lib/easeljs-0.5.0.min.js" data-title="EaselJS/lib/easeljs-0.5.0.min.js at master Â· CreateJS/EaselJS Â· GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>123 lines (122 sloc)</span>
                <span>55.085 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                        <a class="minibutton tooltipped leftwards"
                           title="Clicking this button will automatically fork this project so you can edit the file"
                           href="/CreateJS/EaselJS/edit/master/lib/easeljs-0.5.0.min.js"
                           data-method="post" rel="nofollow">Edit</a>
                  <a href="/CreateJS/EaselJS/raw/master/lib/easeljs-0.5.0.min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/CreateJS/EaselJS/blame/master/lib/easeljs-0.5.0.min.js" class="button minibutton ">Blame</a>
                  <a href="/CreateJS/EaselJS/commits/master/lib/easeljs-0.5.0.min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="data type-javascript js-blob-data">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
</pre>
          </td>
          <td width="100%">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm">* EaselJS</span></div><div class='line' id='LC3'><span class="cm">* Visit http://createjs.com/ for documentation, updates and examples.</span></div><div class='line' id='LC4'><span class="cm">*</span></div><div class='line' id='LC5'><span class="cm">* Copyright (c) 2011 gskinner.com, inc.</span></div><div class='line' id='LC6'><span class="cm">* </span></div><div class='line' id='LC7'><span class="cm">* Distributed under the terms of the MIT license.</span></div><div class='line' id='LC8'><span class="cm">* http://www.opensource.org/licenses/mit-license.html</span></div><div class='line' id='LC9'><span class="cm">*</span></div><div class='line' id='LC10'><span class="cm">* This notice shall be included in all copies or substantial portions of the Software.</span></div><div class='line' id='LC11'><span class="cm">*/</span></div><div class='line' id='LC12'><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span><span class="s2">&quot;UID cannot be instantiated&quot;</span><span class="p">;};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_nextID</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">_nextID</span><span class="o">++</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">UID</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC13'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span><span class="s2">&quot;Ticker cannot be instantiated.&quot;</span><span class="p">;};</span><span class="nx">c</span><span class="p">.</span><span class="nx">useRAF</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pauseable</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_inited</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_startTime</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pausedTime</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_ticks</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pausedTicks</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_interval</span><span class="o">=</span><span class="mi">50</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_lastTime</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_times</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_tickTimes</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_rafActive</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_timeoutID</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">addListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="nx">a</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_inited</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">init</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pauseable</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="kc">true</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">c</span><span class="p">.</span><span class="nx">init</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_inited</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_times</span><span class="o">=</span><span class="p">[];</span></div><div class='line' id='LC14'><span class="nx">c</span><span class="p">.</span><span class="nx">_tickTimes</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pauseable</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="p">.</span><span class="nx">_times</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_lastTime</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_startTime</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_getTime</span><span class="p">());</span><span class="nx">c</span><span class="p">.</span><span class="nx">setInterval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_interval</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">!=-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pauseable</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">)))};</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAllListeners</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pauseable</span><span class="o">=</span><span class="p">[]};</span><span class="nx">c</span><span class="p">.</span><span class="nx">setInterval</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_interval</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_inited</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_setupTick</span><span class="p">()};</span><span class="nx">c</span><span class="p">.</span><span class="nx">getInterval</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">_interval</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">setFPS</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">setInterval</span><span class="p">(</span><span class="mi">1</span><span class="nx">E3</span><span class="o">/</span><span class="nx">a</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">getFPS</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">1</span><span class="nx">E3</span><span class="o">/</span><span class="nx">c</span><span class="p">.</span><span class="nx">_interval</span><span class="p">};</span></div><div class='line' id='LC15'><span class="nx">c</span><span class="p">.</span><span class="nx">getMeasuredFPS</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_times</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getFPS</span><span class="p">()</span><span class="o">|</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_times</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="mi">1</span><span class="nx">E3</span><span class="o">/</span><span class="p">((</span><span class="nx">c</span><span class="p">.</span><span class="nx">_times</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">_times</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">/</span><span class="nx">a</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">setPaused</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">getPaused</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">_paused</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">getTime</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">_getTime</span><span class="p">()</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">_startTime</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pausedTime</span><span class="o">:</span><span class="mi">0</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">getTicks</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">_ticks</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pausedTicks</span><span class="o">:</span><span class="mi">0</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_handleAF</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_rafActive</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_setupTick</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">_getTime</span><span class="p">()</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">_lastTime</span><span class="o">&gt;=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_interval</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="mf">0.97</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_tick</span><span class="p">()};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_handleTimeout</span><span class="o">=</span></div><div class='line' id='LC16'><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">timeoutID</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_setupTick</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">_tick</span><span class="p">()};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_setupTick</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_rafActive</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">timeoutID</span><span class="o">!=</span><span class="kc">null</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">useRAF</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">webkitRequestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">mozRequestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">oRequestAnimationFrame</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">msRequestAnimationFrame</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_handleAF</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">_rafActive</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">return</span><span class="p">}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">timeoutID</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_handleTimeout</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">_interval</span><span class="p">)}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_tick</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_getTime</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">_ticks</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">_lastTime</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_paused</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pausedTicks</span><span class="o">++</span><span class="p">,</span></div><div class='line' id='LC17'><span class="nx">c</span><span class="p">.</span><span class="nx">_pausedTime</span><span class="o">+=</span><span class="nx">l</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">_lastTime</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_pauseable</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">.</span><span class="nx">slice</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">i</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">tick</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">tick</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span> <span class="k">instanceof</span> <span class="nb">Function</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">))}</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_tickTimes</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_getTime</span><span class="p">()</span><span class="o">-</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">_tickTimes</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">100</span><span class="p">;)</span><span class="nx">c</span><span class="p">.</span><span class="nx">_tickTimes</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_times</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">_times</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">100</span><span class="p">;)</span><span class="nx">c</span><span class="p">.</span><span class="nx">_times</span><span class="p">.</span><span class="nx">pop</span><span class="p">()};</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">performance</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">performance</span><span class="p">.</span><span class="nx">now</span><span class="o">||</span><span class="nx">performance</span><span class="p">.</span><span class="nx">mozNow</span><span class="o">||</span><span class="nx">performance</span><span class="p">.</span><span class="nx">msNow</span><span class="o">||</span><span class="nx">performance</span><span class="p">.</span><span class="nx">oNow</span><span class="o">||</span><span class="nx">performance</span><span class="p">.</span><span class="nx">webkitNow</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">_getTime</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">performance</span><span class="p">)</span><span class="o">||</span></div><div class='line' id='LC18'><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">()};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Ticker</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC19'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">stageX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">stageY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">rawX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">rawY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">nativeEvent</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onMouseUp</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">pointerID</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">primary</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stageX</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stageY</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeEvent</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pointerID</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">primary</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">rawX</span><span class="o">=</span><span class="nx">i</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="nx">i</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">rawY</span><span class="o">=</span><span class="nx">j</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">j</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">stageX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">stageY</span><span class="p">,</span></div><div class='line' id='LC20'><span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">nativeEvent</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pointerID</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">primary</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">rawX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">rawY</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[MouseEvent (type=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot; stageX=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">stageX</span><span class="o">+</span><span class="s2">&quot; stageY=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">stageY</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">MouseEvent</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC21'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">identity</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tx</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">ty</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">alpha</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">shadow</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prepend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!=</span><span class="mi">1</span><span class="o">||</span><span class="nx">l</span><span class="o">!=</span><span class="mi">0</span><span class="o">||</span><span class="nx">b</span><span class="o">!=</span><span class="mi">0</span><span class="o">||</span><span class="nx">d</span><span class="o">!=</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">l</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">*</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">*</span></div><div class='line' id='LC22'><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="nx">l</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">*</span><span class="nx">d</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">=</span><span class="nx">g</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">=</span><span class="nx">g</span><span class="o">*</span><span class="nx">l</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="nx">l</span><span class="o">*</span><span class="nx">j</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">i</span><span class="o">+</span><span class="nx">l</span><span class="o">*</span><span class="nx">k</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="nx">d</span><span class="o">*</span><span class="nx">j</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="nx">i</span><span class="o">+</span><span class="nx">d</span><span class="o">*</span><span class="nx">k</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">=</span><span class="nx">e</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nx">j</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">=</span><span class="nx">e</span><span class="o">*</span><span class="nx">i</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nx">k</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prependMatrix</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">tx</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">ty</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">prependProperties</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadow</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendMatrix</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">tx</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">ty</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">appendProperties</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="p">,</span></div><div class='line' id='LC23'><span class="nx">a</span><span class="p">.</span><span class="nx">shadow</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prependTransform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">%</span><span class="mi">360</span><span class="p">)</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="k">else</span> <span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">||</span><span class="nx">j</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">-=</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">-=</span><span class="nx">j</span><span class="p">;</span><span class="nx">f</span><span class="o">||</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">*=</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">,</span><span class="nx">g</span><span class="o">*=</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="nx">k</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="nx">k</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendTransform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">%</span><span class="mi">360</span><span class="p">)</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="k">else</span> <span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">||</span></div><div class='line' id='LC24'><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">*=</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">,</span><span class="nx">g</span><span class="o">*=</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="nx">k</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="nx">k</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">||</span><span class="nx">j</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">-=</span><span class="nx">i</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="nx">j</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">-=</span><span class="nx">i</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">+</span><span class="nx">j</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">rotate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="nx">l</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">*</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">*</span><span class="nx">l</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="o">*</span><span class="nx">l</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">*</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">*</span><span class="nx">l</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nx">l</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">*</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">*</span><span class="nx">l</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">skew</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="nx">a</span><span class="o">*=</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">;</span><span class="nx">l</span><span class="o">*=</span></div><div class='line' id='LC25'><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">*=</span><span class="nx">l</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">*=</span><span class="nx">l</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">translate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">+=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">+=</span><span class="nx">l</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">identity</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">invert</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">d</span><span class="o">-</span><span class="nx">l</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="o">/</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=-</span><span class="nx">l</span><span class="o">/</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=-</span><span class="nx">b</span><span class="o">/</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span></div><div class='line' id='LC26'><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">-</span><span class="nx">d</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">=-</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">-</span><span class="nx">l</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">isIdentity</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">==</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">decompose</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">{});</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">scaleX</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">scaleY</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="o">==</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotation</span><span class="o">=</span><span class="nx">h</span><span class="o">/</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotation</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotation</span><span class="o">&lt;=</span><span class="mi">0</span><span class="o">?</span><span class="mi">180</span><span class="o">:-</span><span class="mi">180</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">skewX</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">skewY</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">skewX</span><span class="o">=</span><span class="nx">b</span><span class="o">/</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">,</span></div><div class='line' id='LC27'><span class="nx">a</span><span class="p">.</span><span class="nx">skewY</span><span class="o">=</span><span class="nx">h</span><span class="o">/</span><span class="nx">c</span><span class="p">.</span><span class="nx">DEG_TO_RAD</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">reinitialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">=</span><span class="nx">g</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendProperties</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="o">=</span><span class="nx">h</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prependProperties</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="o">||</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="o">||</span><span class="nx">h</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span></div><div class='line' id='LC28'><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadow</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Matrix2D (a=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; b=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; c=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; d=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; tx=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">tx</span><span class="o">+</span><span class="s2">&quot; ty=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">ty</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">identity</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Matrix2D</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">b</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Point (x=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="s2">&quot; y=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Point</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">b</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">h</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">d</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Rectangle (x=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="s2">&quot; y=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="s2">&quot; width=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot; height=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Rectangle</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">identity</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">blur</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetX</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetY</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">blur</span><span class="o">=</span><span class="nx">d</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Shadow]&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">blur</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">identity</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="s2">&quot;transparent&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Shadow</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC29'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onComplete</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_animations</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_frames</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_images</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_data</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_loadCount</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_frameHeight</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_frameWidth</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_numFrames</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_regX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_regY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">images</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">images</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_images</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">images</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Image</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">getContext</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">complete</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_loadCount</span><span class="o">++</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span></div><div class='line' id='LC30'><span class="kc">false</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">_handleImageLoad</span><span class="p">()}}(</span><span class="k">this</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">image</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_images</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">],</span><span class="nx">rect</span><span class="o">:</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Rectangle</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">3</span><span class="p">]),</span><span class="nx">regX</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">regY</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">})}</span><span class="k">else</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_frameWidth</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_frameHeight</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_regX</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">regX</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_regY</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">regY</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_numFrames</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">count</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_loadCount</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_calculateFrames</span><span class="p">();</span><span class="k">if</span><span class="p">((</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">animations</span><span class="p">)</span><span class="o">!=</span></div><div class='line' id='LC31'><span class="kc">null</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_animations</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span> <span class="k">in</span> <span class="nx">h</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">g</span><span class="p">};</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">frequency</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">b</span><span class="o">&lt;=</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">frequency</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">frequency</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">next</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">frames</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="o">=!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="o">=</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">==</span><span class="kc">false</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">==</span><span class="kc">true</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">frequency</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">frequency</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_animations</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">}}}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getNumFrames</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span></div><div class='line' id='LC32'><span class="k">this</span><span class="p">.</span><span class="nx">_numFrames</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="p">.</span><span class="nx">length</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getAnimations</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_animations</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getAnimation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFrame</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">complete</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">frame</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">?</span><span class="nx">frame</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[SpriteSheet]&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">complete</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_animations</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_animations</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_frames</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_images</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_images</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_data</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_frameHeight</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_frameHeight</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_frameWidth</span><span class="o">=</span></div><div class='line' id='LC33'><span class="k">this</span><span class="p">.</span><span class="nx">_frameWidth</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_numFrames</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_numFrames</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_loadCount</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_loadCount</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handleImageLoad</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">--</span><span class="k">this</span><span class="p">.</span><span class="nx">_loadCount</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_calculateFrames</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onComplete</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">onComplete</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_calculateFrames</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_frameWidth</span><span class="o">==</span><span class="mi">0</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_frameWidth</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_frameHeight</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_images</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">b</span><span class="o">|</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">h</span><span class="o">|</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_numFrames</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_numFrames</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">*</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span></div><div class='line' id='LC34'><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">image</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">rect</span><span class="o">:</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Rectangle</span><span class="p">(</span><span class="nx">j</span><span class="o">%</span><span class="nx">g</span><span class="o">*</span><span class="nx">b</span><span class="p">,(</span><span class="nx">j</span><span class="o">/</span><span class="nx">g</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">regX</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_regX</span><span class="p">,</span><span class="nx">regY</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_regY</span><span class="p">});</span><span class="nx">a</span><span class="o">+=</span><span class="nx">i</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">_numFrames</span><span class="o">=</span><span class="nx">a</span><span class="p">}};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">SpriteSheet</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC35'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">path</span><span class="o">=</span><span class="nx">d</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="kc">true</span><span class="o">:</span><span class="nx">d</span><span class="p">}</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">exec</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">()},</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">getRGB</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">&gt;&gt;</span><span class="mi">8</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">&gt;&gt;</span><span class="mi">16</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;rgb(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="s2">&quot;rgba(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getHSL</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;hsl(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">%</span><span class="mi">360</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;%,&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;%)&quot;</span><span class="o">:</span><span class="s2">&quot;hsla(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">%</span><span class="mi">360</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;%,&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;%,&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">BASE_64</span><span class="o">=</span><span class="p">{</span><span class="nx">A</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">B</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">C</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">D</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">E</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">F</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">G</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">H</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">I</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">J</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span></div><div class='line' id='LC36'><span class="nx">K</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">L</span><span class="o">:</span><span class="mi">11</span><span class="p">,</span><span class="nx">M</span><span class="o">:</span><span class="mi">12</span><span class="p">,</span><span class="nx">N</span><span class="o">:</span><span class="mi">13</span><span class="p">,</span><span class="nx">O</span><span class="o">:</span><span class="mi">14</span><span class="p">,</span><span class="nx">P</span><span class="o">:</span><span class="mi">15</span><span class="p">,</span><span class="nx">Q</span><span class="o">:</span><span class="mi">16</span><span class="p">,</span><span class="nx">R</span><span class="o">:</span><span class="mi">17</span><span class="p">,</span><span class="nx">S</span><span class="o">:</span><span class="mi">18</span><span class="p">,</span><span class="nx">T</span><span class="o">:</span><span class="mi">19</span><span class="p">,</span><span class="nx">U</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">V</span><span class="o">:</span><span class="mi">21</span><span class="p">,</span><span class="nx">W</span><span class="o">:</span><span class="mi">22</span><span class="p">,</span><span class="nx">X</span><span class="o">:</span><span class="mi">23</span><span class="p">,</span><span class="nx">Y</span><span class="o">:</span><span class="mi">24</span><span class="p">,</span><span class="nx">Z</span><span class="o">:</span><span class="mi">25</span><span class="p">,</span><span class="nx">a</span><span class="o">:</span><span class="mi">26</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="mi">27</span><span class="p">,</span><span class="nx">c</span><span class="o">:</span><span class="mi">28</span><span class="p">,</span><span class="nx">d</span><span class="o">:</span><span class="mi">29</span><span class="p">,</span><span class="nx">e</span><span class="o">:</span><span class="mi">30</span><span class="p">,</span><span class="nx">f</span><span class="o">:</span><span class="mi">31</span><span class="p">,</span><span class="nx">g</span><span class="o">:</span><span class="mi">32</span><span class="p">,</span><span class="nx">h</span><span class="o">:</span><span class="mi">33</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="mi">34</span><span class="p">,</span><span class="nx">j</span><span class="o">:</span><span class="mi">35</span><span class="p">,</span><span class="nx">k</span><span class="o">:</span><span class="mi">36</span><span class="p">,</span><span class="nx">l</span><span class="o">:</span><span class="mi">37</span><span class="p">,</span><span class="nx">m</span><span class="o">:</span><span class="mi">38</span><span class="p">,</span><span class="nx">n</span><span class="o">:</span><span class="mi">39</span><span class="p">,</span><span class="nx">o</span><span class="o">:</span><span class="mi">40</span><span class="p">,</span><span class="nx">p</span><span class="o">:</span><span class="mi">41</span><span class="p">,</span><span class="nx">q</span><span class="o">:</span><span class="mi">42</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="mi">43</span><span class="p">,</span><span class="nx">s</span><span class="o">:</span><span class="mi">44</span><span class="p">,</span><span class="nx">t</span><span class="o">:</span><span class="mi">45</span><span class="p">,</span><span class="nx">u</span><span class="o">:</span><span class="mi">46</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="mi">47</span><span class="p">,</span><span class="nx">w</span><span class="o">:</span><span class="mi">48</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="mi">49</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">50</span><span class="p">,</span><span class="nx">z</span><span class="o">:</span><span class="mi">51</span><span class="p">,</span><span class="mi">0</span><span class="o">:</span><span class="mi">52</span><span class="p">,</span><span class="mi">1</span><span class="o">:</span><span class="mi">53</span><span class="p">,</span><span class="mi">2</span><span class="o">:</span><span class="mi">54</span><span class="p">,</span><span class="mi">3</span><span class="o">:</span><span class="mi">55</span><span class="p">,</span><span class="mi">4</span><span class="o">:</span><span class="mi">56</span><span class="p">,</span><span class="mi">5</span><span class="o">:</span><span class="mi">57</span><span class="p">,</span><span class="mi">6</span><span class="o">:</span><span class="mi">58</span><span class="p">,</span><span class="mi">7</span><span class="o">:</span><span class="mi">59</span><span class="p">,</span><span class="mi">8</span><span class="o">:</span><span class="mi">60</span><span class="p">,</span><span class="mi">9</span><span class="o">:</span><span class="mi">61</span><span class="p">,</span><span class="s2">&quot;+&quot;</span><span class="o">:</span><span class="mi">62</span><span class="p">,</span><span class="s2">&quot;/&quot;</span><span class="o">:</span><span class="mi">63</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">STROKE_CAPS_MAP</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;butt&quot;</span><span class="p">,</span><span class="s2">&quot;round&quot;</span><span class="p">,</span><span class="s2">&quot;square&quot;</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">STROKE_JOINTS_MAP</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;miter&quot;</span><span class="p">,</span><span class="s2">&quot;round&quot;</span><span class="p">,</span><span class="s2">&quot;bevel&quot;</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">_ctx</span><span class="o">=</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="o">?</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="p">()</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">)).</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginCmd</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">,</span></div><div class='line' id='LC37'><span class="p">[],</span><span class="kc">false</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillCmd</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">fill</span><span class="p">,[],</span><span class="kc">false</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeCmd</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">stroke</span><span class="p">,[],</span><span class="kc">false</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_strokeStyleInstructions</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_instructions</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_oldInstructions</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateInstructions</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawAsPath</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateInstructions</span><span class="p">();</span></div><div class='line' id='LC38'><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)((</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]).</span><span class="nx">path</span><span class="o">||</span><span class="nx">e</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">arcTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">arcTo</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">arc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span></div><div class='line' id='LC39'><span class="kc">true</span><span class="p">;</span><span class="nx">g</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="kc">false</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">arc</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">rect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">rect</span><span class="p">,</span></div><div class='line' id='LC40'><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">closePath</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">closePath</span><span class="p">,[]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_oldInstructions</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeStyleInstructions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginFill</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_newPath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="p">[</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,[</span><span class="s2">&quot;fillStyle&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">],</span><span class="kc">false</span><span class="p">)]</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span></div><div class='line' id='LC41'><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginLinearGradientFill</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_newPath</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="o">=</span><span class="p">[</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,[</span><span class="s2">&quot;fillStyle&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">],</span><span class="kc">false</span><span class="p">)];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginRadialGradientFill</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_newPath</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">createRadialGradient</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="o">=</span><span class="p">[</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,[</span><span class="s2">&quot;fillStyle&quot;</span><span class="p">,</span></div><div class='line' id='LC42'><span class="nx">d</span><span class="p">],</span><span class="kc">false</span><span class="p">)];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginBitmapFill</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_newPath</span><span class="p">();</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">createPattern</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="o">=</span><span class="p">[</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,[</span><span class="s2">&quot;fillStyle&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">],</span><span class="kc">false</span><span class="p">)];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">endFill</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">beginFill</span><span class="p">()};</span><span class="nx">a</span><span class="p">.</span><span class="nx">setStrokeStyle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_newPath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeStyleInstructions</span><span class="o">=</span><span class="p">[</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,[</span><span class="s2">&quot;lineWidth&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;1&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">],</span><span class="kc">false</span><span class="p">),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,[</span><span class="s2">&quot;lineCap&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;butt&quot;</span><span class="o">:</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">STROKE_CAPS_MAP</span><span class="p">[</span><span class="nx">h</span><span class="p">]],</span><span class="kc">false</span><span class="p">),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,</span></div><div class='line' id='LC43'><span class="p">[</span><span class="s2">&quot;lineJoin&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;miter&quot;</span><span class="o">:</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">STROKE_JOINTS_MAP</span><span class="p">[</span><span class="nx">d</span><span class="p">]],</span><span class="kc">false</span><span class="p">),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,[</span><span class="s2">&quot;miterLimit&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="s2">&quot;10&quot;</span><span class="o">:</span><span class="nx">e</span><span class="p">],</span><span class="kc">false</span><span class="p">)];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginStroke</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_newPath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="p">[</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,[</span><span class="s2">&quot;strokeStyle&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">],</span><span class="kc">false</span><span class="p">)]</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginLinearGradientStroke</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_newPath</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="o">=</span><span class="p">[</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,</span></div><div class='line' id='LC44'><span class="p">[</span><span class="s2">&quot;strokeStyle&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">],</span><span class="kc">false</span><span class="p">)];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginRadialGradientStroke</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_newPath</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">createRadialGradient</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="o">=</span><span class="p">[</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,[</span><span class="s2">&quot;strokeStyle&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">],</span><span class="kc">false</span><span class="p">)];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginBitmapStroke</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_newPath</span><span class="p">();</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">createPattern</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="o">=</span><span class="p">[</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_setProp</span><span class="p">,[</span><span class="s2">&quot;strokeStyle&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">],</span><span class="kc">false</span><span class="p">)];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">endStroke</span><span class="o">=</span></div><div class='line' id='LC45'><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">beginStroke</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">curveTo</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawRect</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">rect</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawRoundRect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">drawRoundRectComplex</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawRoundRectComplex</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">*=</span><span class="nx">m</span><span class="o">=-</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="nx">g</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">*=</span><span class="nx">o</span><span class="o">=-</span><span class="mi">1</span><span class="p">);</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="nx">i</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">*=</span><span class="nx">n</span><span class="o">=-</span><span class="mi">1</span><span class="p">);</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="nx">j</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">*=</span><span class="nx">q</span><span class="o">=-</span><span class="mi">1</span><span class="p">);</span><span class="nx">j</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">arcTo</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">,[</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">]),</span></div><div class='line' id='LC46'><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">k</span><span class="p">,[</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">o</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">g</span><span class="o">*</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">g</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">p</span><span class="p">,[</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">-</span><span class="nx">i</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">k</span><span class="p">,[</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">n</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">n</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">-</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">p</span><span class="p">,[</span><span class="nx">a</span><span class="o">+</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">k</span><span class="p">,[</span><span class="nx">a</span><span class="o">-</span><span class="nx">j</span><span class="o">*</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="nx">j</span><span class="o">*</span><span class="nx">q</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">-</span><span class="nx">j</span><span class="p">,</span><span class="nx">j</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">p</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">f</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">k</span><span class="p">,[</span><span class="nx">a</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">m</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">closePath</span><span class="p">));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawCircle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">*</span><span class="mi">2</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawEllipse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="o">*</span><span class="mf">0.5522848</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="o">*</span><span class="mf">0.5522848</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">,</span></div><div class='line' id='LC47'><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="o">-</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">,[</span><span class="nx">d</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">,[</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">j</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">,[</span><span class="nx">d</span><span class="o">-</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawPolyStar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">f</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="o">-</span><span class="nx">f</span><span class="p">;</span><span class="nx">g</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="o">:</span><span class="nx">g</span><span class="o">/=</span><span class="mi">180</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">,[</span><span class="nx">a</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="p">]));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="o">+=</span><span class="nx">i</span><span class="p">,</span><span class="nx">f</span><span class="o">!=</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">,[</span><span class="nx">a</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="o">*</span></div><div class='line' id='LC48'><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="o">*</span><span class="nx">f</span><span class="p">])),</span><span class="nx">g</span><span class="o">+=</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">,[</span><span class="nx">a</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">decodePath</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">BASE_64</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">o</span><span class="o">&gt;&gt;</span><span class="mi">3</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">q</span><span class="o">||</span><span class="nx">o</span><span class="o">&amp;</span><span class="mi">3</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;bad path data (@&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;): &quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="nx">n</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="p">(</span><span class="nx">o</span><span class="o">&gt;&gt;</span><span class="mi">2</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="p">)],</span><span class="nx">s</span><span class="o">=</span><span class="nx">p</span><span class="o">&gt;&gt;</span><span class="mi">5</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">(</span><span class="nx">p</span><span class="o">&amp;</span><span class="mi">31</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">6</span><span class="o">|</span><span class="nx">k</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">)];</span><span class="nx">o</span><span class="o">==</span></div><div class='line' id='LC49'><span class="mi">3</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="o">&lt;&lt;</span><span class="mi">6</span><span class="o">|</span><span class="nx">k</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="mi">2</span><span class="p">)]);</span><span class="nx">p</span><span class="o">=</span><span class="nx">s</span><span class="o">*</span><span class="nx">p</span><span class="o">/</span><span class="mi">10</span><span class="p">;</span><span class="nx">n</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="nx">i</span><span class="o">=</span><span class="nx">p</span><span class="o">+=</span><span class="nx">i</span><span class="o">:</span><span class="nx">j</span><span class="o">=</span><span class="nx">p</span><span class="o">+=</span><span class="nx">j</span><span class="p">;</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">e</span><span class="o">+=</span><span class="nx">o</span><span class="p">}</span><span class="nx">q</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_instructions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">_oldInstructions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_oldInstructions</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeStyleInstructions</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">_strokeStyleInstructions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeStyleInstructions</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span></div><div class='line' id='LC50'><span class="nx">a</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawAsPath</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">drawAsPath</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Graphics]&quot;</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">mt</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lt</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">at</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">arcTo</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bt</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">qt</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">quadraticCurveTo</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">arc</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">rect</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">cp</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">closePath</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginFill</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lf</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginLinearGradientFill</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rf</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginRadialGradientFill</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bf</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginBitmapFill</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ef</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endFill</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ss</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">setStrokeStyle</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginStroke</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ls</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginLinearGradientStroke</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rs</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginRadialGradientStroke</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bs</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginBitmapStroke</span><span class="p">;</span></div><div class='line' id='LC51'><span class="nx">a</span><span class="p">.</span><span class="nx">es</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">endStroke</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dr</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawRect</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rr</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawRoundRect</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rc</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawRoundRectComplex</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dc</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawCircle</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">de</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawEllipse</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dp</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawPolyStar</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">decodePath</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_updateInstructions</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_oldInstructions</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginCmd</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeStyleInstructions</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC52'><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeStyleInstructions</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillInstructions</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillCmd</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_strokeInstructions</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeCmd</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">_getEllipseArc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="o">*</span><span class="mf">0.5522848</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="o">*</span><span class="mf">0.5522848</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="o">-</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">,</span></div><div class='line' id='LC53'><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">,[</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">j</span><span class="p">]),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">,[</span><span class="nx">d</span><span class="o">-</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">]));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">_newPath</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateInstructions</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_oldInstructions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_instructions</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_activeInstructions</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_active</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_dirty</span><span class="o">=</span><span class="kc">false</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">_setProp</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Graphics</span><span class="o">=</span><span class="nx">b</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC54'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">()},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">suppressCrossDomainErrors</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_hitTestCanvas</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="o">?</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="p">()</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">_hitTestCanvas</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_hitTestCanvas</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_hitTestContext</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_hitTestCanvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">_nextCacheID</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">alpha</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">regX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">regY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">scaleX</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">scaleY</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">skewX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">skewY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">shadow</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">visible</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC55'><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">snapToPixel</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onPress</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onClick</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onDoubleClick</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onMouseOver</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onTick</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">filters</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">cacheID</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">mask</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">hitArea</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cacheOffsetX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cacheOffsetY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cacheScale</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cacheDataURLID</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cacheDataURL</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_matrix</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">UID</span><span class="p">.</span><span class="nx">get</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_matrix</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Matrix2D</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">isVisible</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleX</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleY</span><span class="o">!=</span><span class="mi">0</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC56'><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">||!</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheScale</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheOffsetX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheOffsetY</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">updateContext</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mask</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">graphics</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getMatrix</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">_matrix</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tx</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ty</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">graphics</span><span class="p">.</span><span class="nx">drawAsPath</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">clip</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">invert</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tx</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ty</span><span class="p">));</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_matrix</span><span class="p">.</span><span class="nx">identity</span><span class="p">().</span><span class="nx">appendTransform</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">skewX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">skewY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">regX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">regY</span><span class="p">);</span></div><div class='line' id='LC57'><span class="nx">createjs</span><span class="p">.</span><span class="nx">Stage</span><span class="p">.</span><span class="nx">_snapToPixelEnabled</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">snapToPixel</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tx</span><span class="o">+</span><span class="mf">0.5</span><span class="o">|</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ty</span><span class="o">+</span><span class="mf">0.5</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tx</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ty</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">*=</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_applyShadow</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="o">?</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="p">()</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">c</span><span class="o">*</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span></div><div class='line' id='LC58'><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">d</span><span class="o">*</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheOffsetX</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheOffsetY</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheScale</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">updateCache</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">updateCache</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheOffsetX</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheOffsetY</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheScale</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;cache() must be called before updateCache()&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">a</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="o">-</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_applyFilters</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheID</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_nextCacheID</span><span class="o">++</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">uncache</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheDataURL</span><span class="o">=</span></div><div class='line' id='LC59'><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheID</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheOffsetX</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheOffsetY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheScale</span><span class="o">=</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getCacheDataURL</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheID</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheDataURLID</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheDataURL</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">toDataURL</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_cacheDataURL</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getStage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Stage</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">localToGlobal</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getConcatenatedMatrix</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_matrix</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Point</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">tx</span><span class="p">,</span></div><div class='line' id='LC60'><span class="nx">c</span><span class="p">.</span><span class="nx">ty</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalToLocal</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getConcatenatedMatrix</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_matrix</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">invert</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Point</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">tx</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">ty</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">localToLocal</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">localToGlobal</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">globalToLocal</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">setTransform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleX</span><span class="o">=</span><span class="nx">c</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleY</span><span class="o">=</span><span class="nx">d</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">skewX</span><span class="o">=</span><span class="nx">f</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">skewY</span><span class="o">=</span><span class="nx">g</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">regX</span><span class="o">=</span><span class="nx">i</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">regY</span><span class="o">=</span><span class="nx">j</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMatrix</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span></div><div class='line' id='LC61'><span class="nx">a</span><span class="p">.</span><span class="nx">identity</span><span class="p">()</span><span class="o">:</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Matrix2D</span><span class="p">).</span><span class="nx">appendTransform</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">skewX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">skewY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">regX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">regY</span><span class="p">).</span><span class="nx">appendProperties</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getConcatenatedMatrix</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">identity</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Matrix2D</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">b</span><span class="o">!=</span><span class="kc">null</span><span class="p">;)</span><span class="nx">a</span><span class="p">.</span><span class="nx">prependTransform</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">scaleX</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">scaleY</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">rotation</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">skewX</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">skewY</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">regX</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">regY</span><span class="p">).</span><span class="nx">prependProperties</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">alpha</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">shadow</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">hitTest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span></div><div class='line' id='LC62'><span class="nx">c</span><span class="p">.</span><span class="nx">_hitTestContext</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_hitTestCanvas</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_testHit</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">h</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneProps</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[DisplayObject (name=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">cloneProps</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">regX</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">regX</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">regY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">regY</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotation</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">scaleX</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleX</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">scaleY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleY</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadow</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">shadow</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">skewX</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">skewX</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">skewY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">skewY</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="p">;</span></div><div class='line' id='LC63'><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">mouseEnabled</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseEnabled</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compositeOperation</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">).</span><span class="nx">putImageData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">).</span><span class="nx">getImageData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_applyShadow</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">Shadow</span><span class="p">.</span><span class="nx">identity</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadowColor</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadowOffsetX</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetX</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadowOffsetY</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetY</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadowBlur</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">blur</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_tick</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onTick</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onTick</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC64'><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">onTick</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_testHit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getImageData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">data</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">suppressCrossDomainErrors</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.&quot;</span><span class="p">;}</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_applyFilters</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">filters</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">filters</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">filters</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">filters</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">applyFilter</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></div><div class='line' id='LC65'><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">DisplayObject</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC66'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">()},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">DisplayObject</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="o">=</span><span class="p">[]};</span><span class="nx">b</span><span class="p">.</span><span class="nx">isVisible</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleX</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleY</span><span class="o">!=</span><span class="mi">0</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_draw</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_draw</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">f</span><span class="p">.</span><span class="nx">isVisible</span><span class="p">()</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC67'><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">f</span><span class="p">.</span><span class="nx">updateContext</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">())}</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">addChild</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">addChild</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">arguments</span><span class="p">[</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">]}</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">addChildAt</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">d</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">arguments</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">2</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">2</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">addChildAt</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">d</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">arguments</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">2</span><span class="p">]}</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC68'><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeChild</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">removeChildAt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeChildAt</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">});</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeChildAt</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">a</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span></div><div class='line' id='LC69'><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeAllChildren</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">().</span><span class="nx">parent</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getChildAt</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span><span class="nx">b</span><span class="p">.</span><span class="nx">sortChildren</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getChildIndex</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getNumChildren</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">swapChildrenAt</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">swapChildren</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC70'><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">),</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">),</span><span class="nx">d</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">f</span><span class="o">!=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">setChildIndex</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">!=</span><span class="k">this</span><span class="o">||</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">d</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">e</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="nx">e</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">--</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">))}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="k">this</span><span class="p">)</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">}</span><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">hitTest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getObjectUnderPoint</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">!=</span><span class="kc">null</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getObjectsUnderPoint</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span></div><div class='line' id='LC71'><span class="k">this</span><span class="p">.</span><span class="nx">localToGlobal</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_getObjectsUnderPoint</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getObjectUnderPoint</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">localToGlobal</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_getObjectsUnderPoint</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneProps</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">clone</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Container (name=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject__tick</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_tick</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_tick</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span></div><div class='line' id='LC72'><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">_tick</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_tick</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject__tick</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_getObjectsUnderPoint</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">DisplayObject</span><span class="p">.</span><span class="nx">_hitTestContext</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">DisplayObject</span><span class="p">.</span><span class="nx">_hitTestCanvas</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_matrix</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onPress</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">onClick</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">onDoubleClick</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="o">&amp;</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseOver</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cacheCanvas</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getConcatenatedMatrix</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">tx</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">ty</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">alpha</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_testHit</span><span class="p">(</span><span class="nx">e</span><span class="p">)))</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span></div><div class='line' id='LC73'><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">j</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">isVisible</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">mouseEnabled</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span> <span class="k">instanceof</span> <span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">_getObjectsUnderPoint</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">_getObjectsUnderPoint</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="o">!</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">)</span><span class="k">return</span> <span class="nx">k</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="o">||</span><span class="nx">i</span><span class="o">||</span><span class="nx">d</span><span class="o">&amp;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">onPress</span><span class="o">||</span><span class="nx">k</span><span class="p">.</span><span class="nx">onClick</span><span class="o">||</span><span class="nx">k</span><span class="p">.</span><span class="nx">onDoubleClick</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="o">&amp;</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">onMouseOver</span><span class="o">||</span><span class="nx">k</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">hitArea</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">getConcatenatedMatrix</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendTransform</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">regX</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">regY</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">scaleX</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">scaleY</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">rotation</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">skewX</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">skewY</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">regX</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">regY</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">alpha</span><span class="o">*=</span><span class="nx">m</span><span class="p">.</span><span class="nx">alpha</span><span class="o">/</span><span class="nx">k</span><span class="p">.</span><span class="nx">alpha</span><span class="p">);</span></div><div class='line' id='LC74'><span class="nx">e</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">alpha</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">tx</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">ty</span><span class="o">-</span><span class="nx">b</span><span class="p">);(</span><span class="nx">m</span><span class="o">||</span><span class="nx">k</span><span class="p">).</span><span class="nx">draw</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_testHit</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="k">else</span> <span class="k">return</span> <span class="nx">k</span><span class="p">}}</span><span class="k">return</span> <span class="kc">null</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Container</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC75'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Container</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_snapToPixelEnabled</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">autoClear</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onMouseUp</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onMouseDown</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">snapToPixelEnabled</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseInBounds</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickOnUpdate</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseMoveOutside</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_pointerData</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_pointerCount</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_mouseOverIntervalID</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">Container_initialize</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">Container_initialize</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span></div><div class='line' id='LC76'><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">HTMLCanvasElement</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_pointerData</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">_enableMouseEvents</span><span class="p">(</span><span class="kc">true</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">update</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">autoClear</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">_snapToPixelEnabled</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">snapToPixelEnabled</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tickOnUpdate</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_tick</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">arguments</span><span class="o">:</span><span class="kc">null</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">updateContext</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">tick</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">update</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span></div><div class='line' id='LC77'><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="p">)}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toDataURL</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;image/png&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getImageData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="o">=</span><span class="s2">&quot;destination-over&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">toDataURL</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">putImageData</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">return</span> <span class="nx">i</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">enableMouseOver</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverIntervalID</span><span class="p">)</span><span class="nx">clearInterval</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverIntervalID</span><span class="p">),</span></div><div class='line' id='LC78'><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverIntervalID</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="mi">20</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverIntervalID</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">_testMouseOver</span><span class="p">()},</span><span class="mi">1</span><span class="nx">E3</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span><span class="nx">a</span><span class="p">))};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneProps</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Stage (name=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_enableMouseEvents</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="nb">window</span><span class="o">:</span><span class="nb">document</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">_handleMouseUp</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="kc">false</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">_handleMouseMove</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span></div><div class='line' id='LC79'><span class="kc">false</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;dblclick&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">_handleDoubleClick</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="kc">false</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">_handleMouseDown</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="kc">false</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_getPointerData</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_pointerData</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_pointerData</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="o">==</span><span class="kc">null</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handleMouseMove</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_handlePointerMove</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handlePointerMove</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span></div><div class='line' id='LC80'><span class="k">this</span><span class="p">.</span><span class="nx">_getPointerData</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">inBounds</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_updatePointerPosition</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">inBounds</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseMoveOutside</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">MouseEvent</span><span class="p">(</span><span class="s2">&quot;onMouseMove&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">rawX</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">rawY</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clone</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_updatePointerPosition</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getElementRect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">);</span><span class="nx">b</span><span class="o">-=</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">c</span><span class="o">-=</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">b</span><span class="o">/=</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">right</span><span class="o">-</span></div><div class='line' id='LC81'><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">)</span><span class="o">/</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">/=</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">bottom</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="p">)</span><span class="o">/</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getPointerData</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">inBounds</span><span class="o">=</span><span class="nx">b</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseMoveOutside</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">c</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">rawX</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">rawY</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseX</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseY</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseInBounds</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">inBounds</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_getElementRect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span></div><div class='line' id='LC82'><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">?</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">paddingLeft</span><span class="p">)</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderLeftWidth</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">paddingTop</span><span class="p">)</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderTopWidth</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">paddingRight</span><span class="p">)</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderRightWidth</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">paddingBottom</span><span class="p">)</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderBottomWidth</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="o">+</span><span class="nx">c</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">bottom</span><span class="o">+</span><span class="nx">d</span><span class="o">-</span><span class="nx">e</span><span class="p">}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handleMouseUp</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_handlePointerUp</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handlePointerUp</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC83'><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getPointerData</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">MouseEvent</span><span class="p">(</span><span class="s2">&quot;onMouseUp&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">rawX</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">rawY</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseUp</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseUp</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">onMouseUp</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">clone</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">onMouseUp</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">target</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">onClick</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_getObjectsUnderPoint</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverIntervalID</span><span class="o">?</span><span class="mi">3</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">target</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">onClick</span><span class="p">(</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">MouseEvent</span><span class="p">(</span><span class="s2">&quot;onClick&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">rawX</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">rawY</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="o">=</span></div><div class='line' id='LC84'><span class="kc">null</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_pointerData</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="k">else</span> <span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handleMouseDown</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_handlePointerDown</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handlePointerDown</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getPointerData</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_updatePointerPosition</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseDown</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseDown</span><span class="p">(</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">MouseEvent</span><span class="p">(</span><span class="s2">&quot;onMouseDown&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">rawX</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">rawY</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getObjectsUnderPoint</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverIntervalID</span><span class="o">?</span><span class="mi">3</span><span class="o">:</span><span class="mi">1</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">onPress</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">MouseEvent</span><span class="p">(</span><span class="s2">&quot;onPress&quot;</span><span class="p">,</span></div><div class='line' id='LC85'><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">rawX</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">rawY</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">onPress</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">onMouseUp</span><span class="p">))</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">c</span><span class="p">}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_testMouseOver</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_primaryPointerID</span><span class="o">==-</span><span class="mi">1</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseX</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverX</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseY</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverY</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseInBounds</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseInBounds</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getObjectsUnderPoint</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseY</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverX</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseY</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverTarget</span><span class="o">!=</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverTarget</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverTarget</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverTarget</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">(</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">MouseEvent</span><span class="p">(</span><span class="s2">&quot;onMouseOut&quot;</span><span class="p">,</span></div><div class='line' id='LC86'><span class="k">this</span><span class="p">.</span><span class="nx">mouseX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverTarget</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">onMouseOver</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">onMouseOver</span><span class="p">(</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">MouseEvent</span><span class="p">(</span><span class="s2">&quot;onMouseOver&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseY</span><span class="p">,</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverTarget</span><span class="o">=</span><span class="nx">a</span><span class="p">}}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handleDoubleClick</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onDoubleClick</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onDoubleClick</span><span class="p">(</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">MouseEvent</span><span class="p">(</span><span class="s2">&quot;onDoubleClick&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseY</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="kc">true</span><span class="p">));</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getObjectsUnderPoint</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseY</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_mouseOverIntervalID</span><span class="o">?</span><span class="mi">3</span><span class="o">:</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onDoubleClick</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">onDoubleClick</span><span class="p">(</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">MouseEvent</span><span class="p">(</span><span class="s2">&quot;onDoubleClick&quot;</span><span class="p">,</span></div><div class='line' id='LC87'><span class="k">this</span><span class="p">.</span><span class="nx">mouseX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseY</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="kc">true</span><span class="p">))};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Stage</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC88'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">DisplayObject</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">image</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">snapToPixel</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">sourceRect</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="p">();</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="o">=</span><span class="k">new</span> <span class="nx">Image</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">isVisible</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleX</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleY</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">complete</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">getContext</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">readyState</span><span class="o">&gt;=</span><span class="mi">2</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_draw</span><span class="o">=</span></div><div class='line' id='LC89'><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_draw</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceRect</span><span class="p">;</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneProps</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Bitmap (name=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Bitmap</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC90'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">DisplayObject</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onAnimationEnd</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentFrame</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentAnimation</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">paused</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">snapToPixel</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentAnimationFrame</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_advanceCount</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_animation</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">isVisible</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleX</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleY</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="p">.</span><span class="nx">complete</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC91'><span class="k">this</span><span class="p">.</span><span class="nx">currentFrame</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_draw</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_draw</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_normalizeFrame</span><span class="p">();</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="p">.</span><span class="nx">getFrame</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">currentFrame</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">image</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">regX</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">regY</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">play</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">paused</span><span class="o">=</span><span class="kc">false</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">paused</span><span class="o">=</span><span class="kc">true</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">gotoAndPlay</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">paused</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_goto</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">gotoAndStop</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">paused</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_goto</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">advance</span><span class="o">=</span></div><div class='line' id='LC92'><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_animation</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">currentAnimationFrame</span><span class="o">++:</span><span class="k">this</span><span class="p">.</span><span class="nx">currentFrame</span><span class="o">++</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_normalizeFrame</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneProps</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[BitmapAnimation (name=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject__tick</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_tick</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_tick</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_animation</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_animation</span><span class="p">.</span><span class="nx">frequency</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">paused</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">++</span><span class="k">this</span><span class="p">.</span><span class="nx">_advanceCount</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">)</span><span class="o">%</span><span class="nx">b</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">advance</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject__tick</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_normalizeFrame</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_animation</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">currentAnimationFrame</span><span class="o">&gt;=</span></div><div class='line' id='LC93'><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_goto</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">paused</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">currentAnimationFrame</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">currentFrame</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">currentAnimationFrame</span><span class="p">]),</span><span class="k">this</span><span class="p">.</span><span class="nx">onAnimationEnd</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onAnimationEnd</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">currentFrame</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">frames</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">currentAnimationFrame</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">currentFrame</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="p">.</span><span class="nx">getNumFrames</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">currentFrame</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onAnimationEnd</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">onAnimationEnd</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kc">null</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_cloneProps</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">cloneProps</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">cloneProps</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_cloneProps</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span></div><div class='line' id='LC94'><span class="nx">a</span><span class="p">.</span><span class="nx">onAnimationEnd</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onAnimationEnd</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentFrame</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentFrame</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentAnimation</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentAnimation</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">paused</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">paused</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_animation</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_animation</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentAnimationFrame</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentAnimationFrame</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_goto</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="p">.</span><span class="nx">getAnimation</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">currentAnimationFrame</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_animation</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">currentAnimation</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_normalizeFrame</span><span class="p">()}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">currentAnimation</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_animation</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">currentFrame</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">BitmapAnimation</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC95'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">DisplayObject</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">graphics</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">graphics</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Graphics</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">isVisible</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Boolean</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleX</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleY</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">graphics</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_draw</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_draw</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">graphics</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC96'><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">graphics</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">graphics</span><span class="p">.</span><span class="nx">clone</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">graphics</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneProps</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Shape (name=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Shape</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC97'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">DisplayObject</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_workingContext</span><span class="o">=</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="o">?</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="p">()</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">)).</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="s2">&quot;#000&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;top&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">outline</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="s2">&quot;#000&quot;</span><span class="p">};</span></div><div class='line' id='LC98'><span class="nx">b</span><span class="p">.</span><span class="nx">isVisible</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Boolean</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleX</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleY</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="o">!==</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_draw</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_draw</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">outline</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">||</span><span class="s2">&quot;start&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">||</span><span class="s2">&quot;alphabetic&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_drawText</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMeasuredWidth</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_getWorkingContext</span><span class="p">().</span><span class="nx">measureText</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">).</span><span class="nx">width</span><span class="p">};</span></div><div class='line' id='LC99'><span class="nx">b</span><span class="p">.</span><span class="nx">getMeasuredLineHeight</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_getWorkingContext</span><span class="p">().</span><span class="nx">measureText</span><span class="p">(</span><span class="s2">&quot;M&quot;</span><span class="p">).</span><span class="nx">width</span><span class="o">*</span><span class="mf">1.2</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMeasuredHeight</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_drawText</span><span class="p">()</span><span class="o">*</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">getMeasuredLineHeight</span><span class="p">())};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneProps</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Text (text=&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">20</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">17</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;...&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_cloneProps</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">cloneProps</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">cloneProps</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_cloneProps</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span></div><div class='line' id='LC100'><span class="k">this</span><span class="p">.</span><span class="nx">textAlign</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textBaseline</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">outline</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">outline</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_getWorkingContext</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_workingContext</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">font</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">||</span><span class="s2">&quot;start&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">||</span><span class="s2">&quot;alphabetic&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_drawText</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=!!</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getWorkingContext</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/(?:\r\n|\r|\n)/</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineHeight</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">getMeasuredLineHeight</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span></div><div class='line' id='LC101'><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]).</span><span class="nx">width</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">)</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_drawTextLine</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">e</span><span class="o">*</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="sr">/(\s)/</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">k</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">j</span><span class="o">+</span><span class="nx">i</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="p">[</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="p">]).</span><span class="nx">width</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_drawTextLine</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">e</span><span class="o">*</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="o">++</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="nx">j</span><span class="o">+=</span><span class="nx">i</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="p">[</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_drawTextLine</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">e</span><span class="o">*</span><span class="nx">d</span><span class="p">)}</span><span class="nx">e</span><span class="o">++</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_drawTextLine</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">outline</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeText</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">||</span><span class="mi">65535</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">||</span><span class="mi">65535</span><span class="p">)};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Text</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC102'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span><span class="s2">&quot;SpriteSheetUtils cannot be instantiated&quot;</span><span class="p">;};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_workingCanvas</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="o">?</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="p">()</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">_workingContext</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_workingCanvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">addFlippedFrames</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="nx">l</span><span class="o">||</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_flip</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">++</span><span class="nx">d</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_flip</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">++</span><span class="nx">d</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_flip</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">++</span><span class="nx">d</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="kc">true</span><span class="p">)}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">extractFrame</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getAnimation</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">frames</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFrame</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">rect</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_workingCanvas</span><span class="p">;</span></div><div class='line' id='LC103'><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_workingContext</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">image</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="k">new</span> <span class="nx">Image</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toDataURL</span><span class="p">(</span><span class="s2">&quot;image/png&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">l</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">mergeAlpha</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="o">?</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="p">()</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="o">=</span><span class="s2">&quot;destination-in&quot;</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_flip</span><span class="o">=</span></div><div class='line' id='LC104'><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_images</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_workingCanvas</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">_workingContext</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nx">j</span><span class="p">.</span><span class="nx">__tmp</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">(</span><span class="nx">l</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="k">new</span> <span class="nx">Image</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">toDataURL</span><span class="p">(</span><span class="s2">&quot;image/png&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">k</span><span class="p">)}</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_frames</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">rect</span><span class="p">.</span><span class="nx">clone</span><span class="p">(),</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">j</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">__tmp</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">a</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="p">{</span><span class="nx">image</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">rect</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">regX</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">regX</span><span class="p">,</span><span class="nx">regY</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">regY</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span></div><div class='line' id='LC105'><span class="nx">o</span><span class="p">.</span><span class="nx">regX</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">j</span><span class="p">.</span><span class="nx">regX</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">m</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">regY</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="nx">j</span><span class="p">.</span><span class="nx">regY</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">o</span><span class="p">)}</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;_&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;h&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">h</span><span class="o">?</span><span class="s2">&quot;v&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_animations</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_data</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="nx">l</span><span class="p">,</span><span class="nx">frequency</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">frequency</span><span class="p">,</span><span class="nx">next</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">next</span><span class="p">,</span><span class="nx">frames</span><span class="o">:</span><span class="p">[]};</span><span class="nx">j</span><span class="p">.</span><span class="nx">next</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">next</span><span class="o">+=</span><span class="nx">l</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">frames</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">frames</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="p">)}};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">SpriteSheetUtils</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC106'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">()},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">ERR_DIMENSIONS</span><span class="o">=</span><span class="s2">&quot;frame dimensions exceed max spritesheet dimensions&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">ERR_RUNNING</span><span class="o">=</span><span class="s2">&quot;a build is already running&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxWidth</span><span class="o">=</span><span class="mi">2048</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxHeight</span><span class="o">=</span><span class="mi">2048</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_frames</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_animations</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_data</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_nextFrameIndex</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_index</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_callback</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_timeSlice</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_timerID</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_scale</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_animations</span><span class="o">=</span><span class="p">{}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">addFrame</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">)</span><span class="k">throw</span> <span class="nx">c</span><span class="p">.</span><span class="nx">ERR_RUNNING</span><span class="p">;</span></div><div class='line' id='LC107'><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">bounds</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nominalBounds</span><span class="p">;</span><span class="o">!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBounds</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBounds</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">source</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">sourceRect</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">scale</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">funct</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="nx">h</span><span class="p">})</span><span class="o">-</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">addAnimation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">)</span><span class="k">throw</span> <span class="nx">c</span><span class="p">.</span><span class="nx">ERR_RUNNING</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_animations</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">frames</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">next</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">frequency</span><span class="o">:</span><span class="nx">d</span><span class="p">}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">addMovieClip</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">)</span><span class="k">throw</span> <span class="nx">c</span><span class="p">.</span><span class="nx">ERR_RUNNING</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">frameBounds</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">bounds</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">nominalBounds</span><span class="p">;</span><span class="o">!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBounds</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBounds</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span></div><div class='line' id='LC108'><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">timeline</span><span class="p">.</span><span class="nx">duration</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">addFrame</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">actionsEnabled</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">actionsEnabled</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">gotoAndStop</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">actionsEnabled</span><span class="o">=</span><span class="nx">b</span><span class="p">},[</span><span class="nx">f</span><span class="p">],</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">timeline</span><span class="p">.</span><span class="nx">_labels</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">index</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">label</span><span class="o">:</span><span class="nx">g</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">index</span><span class="p">});</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">label</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="o">==</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">index</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">index</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">addAnimation</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="kc">true</span><span class="p">)}}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">build</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">)</span><span class="k">throw</span> <span class="nx">c</span><span class="p">.</span><span class="nx">ERR_RUNNING</span><span class="p">;</span></div><div class='line' id='LC109'><span class="k">this</span><span class="p">.</span><span class="nx">_callback</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_startBuild</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_drawNext</span><span class="p">(););</span><span class="k">this</span><span class="p">.</span><span class="nx">_endBuild</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">buildAsync</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">)</span><span class="k">throw</span> <span class="nx">c</span><span class="p">.</span><span class="nx">ERR_RUNNING</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_callback</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_startBuild</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_timeSlice</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mf">0.01</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mf">0.99</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="mf">0.3</span><span class="p">))</span><span class="o">*</span><span class="mi">50</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_timerID</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">_run</span><span class="p">()},</span><span class="mi">50</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_timeSlice</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">stopAsync</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_timerID</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span><span class="s2">&quot;SpriteSheetBuilder cannot be cloned.&quot;</span><span class="p">;};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[SpriteSheetBuilder]&quot;</span><span class="p">};</span></div><div class='line' id='LC110'><span class="nx">b</span><span class="p">.</span><span class="nx">_startBuild</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_index</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_scale</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="o">=</span><span class="p">{</span><span class="nx">images</span><span class="o">:</span><span class="p">[],</span><span class="nx">frames</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">animations</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_animations</span><span class="p">};</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">height</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="mi">2</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">maxHeight</span><span class="p">)</span><span class="k">throw</span> <span class="nx">c</span><span class="p">.</span><span class="nx">ERR_DIMENSIONS</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_fillRow</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">w</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">w</span><span class="p">;</span><span class="nx">d</span><span class="o">+=</span><span class="nx">g</span><span class="p">.</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">h</span><span class="o">||!</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="o">?</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">createCanvas</span><span class="p">()</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span></div><div class='line' id='LC111'><span class="nx">i</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getSize</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getSize</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">maxHeight</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">.</span><span class="nx">images</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">h</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">++</span><span class="p">)}}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_getSize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;);</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">))};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_fillRow</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">maxWidth</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">maxHeight</span><span class="o">-</span><span class="nx">b</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">+=</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_scale</span><span class="o">*</span><span class="nx">m</span><span class="p">.</span><span class="nx">scale</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">sourceRect</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">source</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">o</span><span class="o">*</span><span class="nx">n</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">e</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">o</span><span class="o">*</span><span class="nx">n</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">e</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">o</span><span class="o">*</span><span class="nx">n</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="mi">2</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">o</span><span class="o">*</span><span class="nx">n</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="mi">2</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">)</span><span class="k">throw</span> <span class="nx">c</span><span class="p">.</span><span class="nx">ERR_DIMENSIONS</span><span class="p">;</span></div><div class='line' id='LC112'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">||</span><span class="nx">i</span><span class="o">+</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">))</span><span class="nx">m</span><span class="p">.</span><span class="nx">img</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">rect</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Rectangle</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">||</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="p">.</span><span class="nx">index</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="o">-</span><span class="nx">p</span><span class="o">+</span><span class="nx">o</span><span class="o">*</span><span class="nx">q</span><span class="p">.</span><span class="nx">regX</span><span class="o">-</span><span class="nx">e</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="o">-</span><span class="nx">s</span><span class="o">+</span><span class="nx">o</span><span class="o">*</span><span class="nx">q</span><span class="p">.</span><span class="nx">regY</span><span class="o">-</span><span class="nx">e</span><span class="p">)],</span><span class="nx">i</span><span class="o">+=</span><span class="nx">n</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="nx">w</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="o">:</span><span class="nx">j</span><span class="p">}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_endBuild</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">spriteSheet</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">SpriteSheet</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_callback</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_callback</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_run</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">()</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_timeSlice</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">a</span><span class="o">&gt;</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">();)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_drawNext</span><span class="p">()){</span><span class="nx">b</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_endBuild</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_timerID</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_run</span><span class="p">()},</span></div><div class='line' id='LC113'><span class="mi">50</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_timeSlice</span><span class="p">)}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_drawNext</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">_index</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">_scale</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">rect</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">sourceRect</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_data</span><span class="p">.</span><span class="nx">images</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">img</span><span class="p">].</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">funct</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">funct</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">scope</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">params</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">*</span><span class="nx">b</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">*</span><span class="nx">b</span><span class="p">));</span><span class="nx">e</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="k">return</span><span class="o">++</span><span class="k">this</span><span class="p">.</span><span class="nx">_index</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_frames</span><span class="p">.</span><span class="nx">length</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">SpriteSheetBuilder</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC114'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">DisplayObject</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">htmlElement</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_style</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">DisplayObject_initialize</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseEnabled</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">htmlElement</span><span class="o">=</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_style</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_style</span><span class="p">.</span><span class="nx">transformOrigin</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_style</span><span class="p">.</span><span class="nx">WebkitTransformOrigin</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_style</span><span class="p">.</span><span class="nx">msTransformOrigin</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_style</span><span class="p">.</span><span class="nx">MozTransformOrigin</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_style</span><span class="p">.</span><span class="nx">OTransformOrigin</span><span class="o">=</span></div><div class='line' id='LC115'><span class="s2">&quot;0% 0%&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">isVisible</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">htmlElement</span><span class="o">!=</span><span class="kc">null</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">htmlElement</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getConcatenatedMatrix</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_matrix</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">htmlElement</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">?</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">transform</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">WebkitTransform</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">OTransform</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">msTransform</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;matrix(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">tx</span><span class="o">+</span><span class="mf">0.5</span><span class="o">|</span><span class="mi">0</span><span class="p">,(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ty</span><span class="o">+</span><span class="mf">0.5</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">MozTransform</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;matrix(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,(</span><span class="nx">a</span><span class="p">.</span><span class="nx">tx</span><span class="o">+</span><span class="mf">0.5</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ty</span><span class="o">+</span><span class="mf">0.5</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">}};</span></div><div class='line' id='LC116'><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="p">.</span><span class="nx">uncache</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="p">.</span><span class="nx">updateCache</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="p">.</span><span class="nx">hitTest</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="p">.</span><span class="nx">localToGlobal</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalToLocal</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="p">.</span><span class="nx">localToLocal</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneProps</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[DOMElement (name=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">_tick</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">htmlElement</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">htmlElement</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onTick</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">onTick</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">DOMElement</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">()},</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="p">.</span><span class="nx">getBounds</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Rectangle</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">applyFilter</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Filter]&quot;</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">c</span><span class="p">};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Filter</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{};</span></div><div class='line' id='LC117'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span><span class="s2">&quot;Touch cannot be instantiated&quot;</span><span class="p">;};</span><span class="nx">c</span><span class="p">.</span><span class="nx">isSupported</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;ontouchstart&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">msPointerEnabled</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">enable</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">isSupported</span><span class="p">())</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="o">=</span><span class="p">{</span><span class="nx">pointers</span><span class="o">:</span><span class="p">{},</span><span class="nx">multitouch</span><span class="o">:!</span><span class="nx">a</span><span class="p">,</span><span class="nx">preventDefault</span><span class="o">:!</span><span class="nx">l</span><span class="p">,</span><span class="nx">count</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="s2">&quot;ontouchstart&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IOS_enable</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">msPointerEnabled</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IE_enable</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">disable</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;ontouchstart&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IOS_disable</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">msPointerEnabled</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IE_disable</span><span class="p">(</span><span class="nx">b</span><span class="p">))};</span></div><div class='line' id='LC118'><span class="nx">c</span><span class="p">.</span><span class="nx">_IOS_enable</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IOS_handleEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;touchmove&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;touchend&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;touchcancel&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="kc">false</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IOS_disable</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kc">false</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;touchmove&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kc">false</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;touchend&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kc">false</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;touchcancel&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kc">false</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IOS_handleEvent</span><span class="o">=</span></div><div class='line' id='LC119'><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">changedTouches</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">identifier</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">target</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">==</span><span class="s2">&quot;touchstart&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleStart</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">pageX</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">pageY</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="o">==</span><span class="s2">&quot;touchmove&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleMove</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">pageX</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">pageY</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">h</span><span class="o">==</span><span class="s2">&quot;touchend&quot;</span><span class="o">||</span><span class="nx">h</span><span class="o">==</span><span class="s2">&quot;touchcancel&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleEnd</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">))}}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IE_enable</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IE_handleEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;MSPointerDown&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;MSPointerMove&quot;</span><span class="p">,</span></div><div class='line' id='LC120'><span class="nx">l</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;MSPointerUp&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;MSPointerCancel&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">msTouchAction</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">.</span><span class="nx">activeIDs</span><span class="o">=</span><span class="p">{}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IE_disable</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">.</span><span class="nx">f</span><span class="p">;</span><span class="nb">window</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;MSPointerMove&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nb">window</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;MSPointerUp&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nb">window</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;MSPointerCancel&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;MSPointerDown&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="kc">false</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_IE_handleEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC121'><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pointerId</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">.</span><span class="nx">activeIDs</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="s2">&quot;MSPointerDown&quot;</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcElement</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleStart</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="p">));</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="s2">&quot;MSPointerMove&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleMove</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="s2">&quot;MSPointerUp&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">==</span><span class="s2">&quot;MSPointerCancel&quot;</span><span class="p">)</span><span class="k">delete</span> <span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleEnd</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">)}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_handleStart</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">multitouch</span><span class="o">||!</span><span class="nx">e</span><span class="p">.</span><span class="nx">count</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">pointers</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">count</span><span class="o">++</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handlePointerDown</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">))}};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_handleMove</span><span class="o">=</span></div><div class='line' id='LC122'><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">.</span><span class="nx">pointers</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handlePointerMove</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">_handleEnd</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">__touch</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">pointers</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">count</span><span class="o">--</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handlePointerUp</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kc">true</span><span class="p">),</span><span class="k">delete</span> <span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">])};</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Touch</span><span class="o">=</span><span class="nx">c</span><span class="p">})();</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1347543525" height="64" width="64">
</div>


        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.10781s from fe17.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-icon mega-icon-invertocat"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/CreateJS/EaselJS/suggestions/commit/c28f597d16528c97de1d2e222ffeb01d3803309c">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-icon mega-icon-normalscreen"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="mini-icon mini-icon-brightness"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.10839' data-host='fe17'></span>
    
  </body>
</html>

